diff --git a/src/server/ua_services_monitoreditem.c b/src/server/ua_services_monitoreditem.c
index 5b62be801..32b0e77e0 100644
--- a/src/server/ua_services_monitoreditem.c
+++ b/src/server/ua_services_monitoreditem.c
@@ -144,7 +144,8 @@ static UA_StatusCode
 checkAdjustMonitoredItemParams(UA_Server *server, UA_Session *session,
                                const UA_MonitoredItem *mon,
                                const UA_DataType* valueType,
-                               UA_MonitoringParameters *params) {
+                               UA_MonitoringParameters *params,
+                               UA_Double pubInterval) {
     UA_LOCK_ASSERT(&server->serviceMutex, 1);
 
     /* Check the filter */
@@ -219,7 +220,15 @@ checkAdjustMonitoredItemParams(UA_Server *server, UA_Session *session,
     }
         
     /* Adjust to sampling interval to lie within the limits */
-    if(params->samplingInterval <= 0.0) {
+    if(params->samplingInterval < 0.0) {
+      // The standard states to use the publishing interval as specified in chapter 4 section 7.21
+      // params->samplingInterval = pubInterval;
+      // However we observed that for a queue length of 1 the sampling is done directly after publishing
+      // -> this results in publishing quite old value if the publishing interval is long
+      // That is why we fix the sampling here
+      params->samplingInterval = 250.0;
+      params->discardOldest = true;
+    } else if (params->samplingInterval == 0) {
         /* A sampling interval of zero is possible and indicates that the
          * MonitoredItem is checked for every write operation */
         params->samplingInterval = 0.0;
@@ -444,8 +453,14 @@ Operation_CreateMonitoredItem(UA_Server *server, UA_Session *session,
                                               &newMon->itemToMonitor);
     result->statusCode |= UA_MonitoringParameters_copy(&request->requestedParameters,
                                                        &newMon->parameters);
-    result->statusCode |= checkAdjustMonitoredItemParams(server, session, newMon,
-                                                         valueType, &newMon->parameters);
+    if(!cmc->sub){
+      result->statusCode |= checkAdjustMonitoredItemParams(server, session, newMon,
+                                                         valueType, &newMon->parameters, 0.0);
+    } else {
+      result->statusCode |= checkAdjustMonitoredItemParams(server, session, newMon,
+                                                         valueType, &newMon->parameters, cmc->sub->publishingInterval);
+    }
+
 #ifdef UA_ENABLE_SUBSCRIPTIONS_EVENTS
     result->statusCode |= checkEventFilterParam(server, session, newMon,
                                                          &newMon->parameters);
@@ -575,9 +590,15 @@ Operation_ModifyMonitoredItem(UA_Server *server, UA_Session *session, UA_Subscri
 
     /* Verify and adjust the new parameters. This still leaves the original
      * MonitoredItem untouched. */
-    result->statusCode =
+    if(!sub){
+      result->statusCode =
         checkAdjustMonitoredItemParams(server, session, mon,
-                                       v.value.type, &params);
+                                       v.value.type, &params, 0.0);
+    } else {
+      result->statusCode =
+              checkAdjustMonitoredItemParams(server, session, mon,
+                                             v.value.type, &params, sub->publishingInterval);
+    }
     UA_DataValue_clear(&v);
     if(result->statusCode != UA_STATUSCODE_GOOD) {
         UA_MonitoringParameters_clear(&params);

diff --git a/src/server/ua_server_binary.c b/src/server/ua_server_binary.c
index e457f3e..79b2e31 100644
--- a/src/server/ua_server_binary.c
+++ b/src/server/ua_server_binary.c
@@ -439,6 +439,8 @@ processMSG(UA_Server *server, UA_SecureChannel *channel,
             sendError(channel, msg, requestPos, responseType,
                       requestId, UA_STATUSCODE_BADSESSIONIDINVALID);
             UA_deleteMembers(request, requestType);
+            if(++channel->invalidSessionAccessCounter > 3)
+              Service_CloseSecureChannel(server, channel);
             return;
         }
         UA_Session_init(&anonymousSession);
@@ -446,6 +448,7 @@ processMSG(UA_Server *server, UA_SecureChannel *channel,
         anonymousSession.channel = channel;
         session = &anonymousSession;
     }
+    channel->invalidSessionAccessCounter = 0;
 
     /* Trying to use a non-activated session? */
     if(sessionRequired && !session->activated) {
diff --git a/src/server/ua_services_session.c b/src/server/ua_services_session.c
index 9b13675..382505e 100644
--- a/src/server/ua_services_session.c
+++ b/src/server/ua_services_session.c
@@ -58,11 +58,15 @@ Service_ActivateSession(UA_Server *server, UA_SecureChannel *channel,
                         UA_Session *session, const UA_ActivateSessionRequest *request,
                         UA_ActivateSessionResponse *response) {
     if(session->validTill < UA_DateTime_nowMonotonic()) {
+        if(++channel->invalidSessionAccessCounter > 3)
+          Service_CloseSecureChannel(server, channel);
+
         UA_LOG_INFO_SESSION(server->config.logger, session, "ActivateSession: SecureChannel %i wants "
                             "to activate, but the session has timed out", channel->securityToken.channelId);
         response->responseHeader.serviceResult = UA_STATUSCODE_BADSESSIONIDINVALID;
         return;
     }
+    channel->invalidSessionAccessCounter = 0;
 
     if(request->userIdentityToken.encoding < UA_EXTENSIONOBJECT_DECODED ||
        (request->userIdentityToken.content.decoded.type != &UA_TYPES[UA_TYPES_ANONYMOUSIDENTITYTOKEN] &&
diff --git a/src/ua_securechannel.h b/src/ua_securechannel.h
index e2ccecf..417b9ec 100644
--- a/src/ua_securechannel.h
+++ b/src/ua_securechannel.h
@@ -49,6 +49,9 @@ struct UA_SecureChannel {
     UA_Connection *connection;
     LIST_HEAD(session_pointerlist, SessionEntry) sessions;
     LIST_HEAD(chunk_pointerlist, ChunkEntry) chunks;
+    //WinCC workaround, count numbers of activateSession requests by the client to
+    //close SecureChannel and force the creation of a new Session
+    UA_UInt32 invalidSessionAccessCounter;
 };
 
 void UA_SecureChannel_init(UA_SecureChannel *channel);
